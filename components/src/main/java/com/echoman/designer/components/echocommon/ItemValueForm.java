/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ItemValueForm.java
 *
 * Created on Nov 2, 2011, 6:13:51 PM
 */
package com.echoman.designer.components.echocommon;

import java.beans.PropertyEditorSupport;
import javax.swing.JOptionPane;

/**
 *
 */
public class ItemValueForm extends javax.swing.JDialog {

    private final PropertyEditorSupport editor;
    private String itemValue = "";

    /** Creates new form ItemValueForm */
    public ItemValueForm(java.awt.Frame parent, boolean modal, PropertyEditorSupport editor) {
        super(parent, modal);
        this.editor = editor;
        initComponents();
        setItemValue(editor.getAsText());
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtItem = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnCopyToValue = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtValue = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(ItemValueForm.class, "ItemValueForm.title")); // NOI18N
        setModal(true);
        setResizable(false);

        txtItem.setColumns(20);
        txtItem.setRows(5);
        jScrollPane1.setViewportView(txtItem);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ItemValueForm.class, "ItemValueForm.jLabel1.text")); // NOI18N

        btnCopyToValue.setText(org.openide.util.NbBundle.getMessage(ItemValueForm.class, "ItemValueForm.btnCopyToValue.text")); // NOI18N
        btnCopyToValue.setToolTipText(org.openide.util.NbBundle.getMessage(ItemValueForm.class, "ItemValueForm.btnCopyToValue.toolTipText")); // NOI18N
        btnCopyToValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopyToValueActionPerformed(evt);
            }
        });

        txtValue.setColumns(20);
        txtValue.setRows(5);
        jScrollPane2.setViewportView(txtValue);

        jLabel2.setText(org.openide.util.NbBundle.getMessage(ItemValueForm.class, "ItemValueForm.jLabel2.text")); // NOI18N

        btnOk.setText(org.openide.util.NbBundle.getMessage(ItemValueForm.class, "ItemValueForm.btnOk.text")); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText(org.openide.util.NbBundle.getMessage(ItemValueForm.class, "ItemValueForm.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCopyToValue)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnOk});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(btnCopyToValue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (hasValidItemValueCount()) {
            if (doAcceptValue(editor.getAsText(), itemValue)) {
                setVisible(false);
                dispose();
            }
        } else {
            JOptionPane.showMessageDialog(this, "The number of items must equal to number of values.");
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private boolean hasValidItemValueCount() {
        String[] items = txtItem.getText().trim().split("\\n");
        String newItems = "";
        int itemCnt = 0;
        for (int i = 0; i < items.length; i++) {
            String item = items[i].trim();
            if (!"".equals(item)) {
                itemCnt++;
                newItems = newItems + item + "\n";
            }
        }
        txtItem.setText(newItems);
        String[] values = txtValue.getText().trim().split("\\n");
        String newValues = "";
        int valueCnt = 0;
        for (int i = 0; i < values.length; i++) {
            String val = values[i].trim();
            if (!"".equals(val)) {
                valueCnt++;
                newValues = newValues + val + "\n";
            }
        }
        txtValue.setText(newValues);
        if (itemCnt == valueCnt) {
            items = txtItem.getText().trim().split("\\n");
            values = txtValue.getText().trim().split("\\n");
            itemValue = "";
            for (int i = 0; i < itemCnt; i++) {
                String item = items[i].trim();
                String val = values[i].trim();
                // THIS SHOULD BE SPLIT WITH SOMETHING OTHER THAN A SPACE
                // THIS PREVENTS THE RADIO BUTTON VALUE FROM EVER BEING
                // MORE THAN ONE WORD.
                itemValue = itemValue + item + " " + val +"\n";
            }
            return true;
        }
        return false;
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCopyToValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopyToValueActionPerformed
        String[] items = txtItem.getText().trim().split("\\n");
        String values = "";
        for (int i = 0; i < items.length; i++) {
            String item = items[i].trim().replace(" ", "");
            values = values + item + "\n";
        }
        txtValue.setText(values);
    }//GEN-LAST:event_btnCopyToValueActionPerformed

    private void setItemValue(String itemValue) {
        String items = "";
        String values = "";
        if (!"".equals(itemValue)) {
            String[] lines = itemValue.split("\\n");
            for (int i = 0; i < lines.length; i++) {
                String item = lines[i].trim();
                String val = item;
                int pos = item.lastIndexOf(" ");
                if (pos > -1) {
                    val = item.substring(pos + 1);
                    item = item.substring(0, pos);
                }
                items = items + item + "\n";
                values = values + val + "\n";
            }
        }
        txtItem.setText(items);
        txtValue.setText(values);
    }

    public boolean doAcceptValue(String oldValue, String newValue) {
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCopyToValue;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea txtItem;
    private javax.swing.JTextArea txtValue;
    // End of variables declaration//GEN-END:variables
}
