/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DefaultValueForm.java
 *
 * Created on Aug 3, 2011, 11:49:11 AM
 */

package com.echoman.designer.components.echocommon;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.beans.PropertyEditor;
import java.beans.PropertyEditorSupport;
import javax.swing.JOptionPane;

/**
 *
 * @author 00_hwidja_00
 */
public class DefaultValueForm extends javax.swing.JDialog implements ActionListener {

    public static final String VAL_TODAY = "date()";
    public static final String VAL_TIMESTAMP = "time()";
    public static final String VAL_USER = "user()";
    public static final String VAL_FIELD = "field";
    public static final String VAL_CUSTOM = "";

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    public PropertyEditor editor;
    private int returnStatus = RET_CANCEL;
    private String value = "";
    /** Creates new form DefaultValueForm */
    public DefaultValueForm(java.awt.Frame parent, boolean modal, PropertyEditorSupport editor) {
        super(parent, modal);
        this.editor = editor;
        initComponents();
        setLocationRelativeTo(null);
        initButtons();
        setCurrentValue();
    }

    private void setCurrentValue() {
        value = this.editor.getAsText();
        txtValue.setText(VAL_CUSTOM);
        rbValue.setSelected(true);
        txtValue.setEnabled(true);
        txtFld.setEnabled(false);
        if (value != null) {
            if (value.equals(VAL_TODAY)) {
                rbToday.setSelected(true);
                rbTime.setSelected(false);
                txtValue.setEnabled(false);
            } else if(value.equals(VAL_TIMESTAMP)) {
                rbToday.setSelected(false);
                rbTime.setSelected(true);
                txtValue.setEnabled(false);
            } else if (value.equals(VAL_USER)) {
                rbUser.setSelected(true);
                txtValue.setEnabled(false);
            } else if (value.startsWith(VAL_FIELD + "(")) {
                rbFld.setSelected(true);
                txtFld.setEnabled(true);
                txtValue.setEnabled(false);
                String fld = value.replace(VAL_FIELD + "(", "");
                fld = fld.replace(")", "");
                txtFld.setText(fld);
                value = VAL_FIELD;
            } else {
                txtValue.setText(value);
                value = VAL_CUSTOM;
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        rbToday = new javax.swing.JRadioButton();
        rbTime = new javax.swing.JRadioButton();
        rbUser = new javax.swing.JRadioButton();
        rbFld = new javax.swing.JRadioButton();
        txtFld = new javax.swing.JTextField();
        rbValue = new javax.swing.JRadioButton();
        txtValue = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.title")); // NOI18N
        setModal(true);
        setResizable(false);

        buttonGroup1.add(rbToday);
        rbToday.setText(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbToday.text")); // NOI18N
        rbToday.setActionCommand(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbToday.actionCommand")); // NOI18N

        buttonGroup1.add(rbTime);
        rbTime.setText(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbTime.text")); // NOI18N
        rbTime.setActionCommand(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbTime.actionCommand")); // NOI18N

        buttonGroup1.add(rbUser);
        rbUser.setText(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbUser.text")); // NOI18N
        rbUser.setActionCommand(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbUser.actionCommand")); // NOI18N

        buttonGroup1.add(rbFld);
        rbFld.setText(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbFld.text")); // NOI18N
        rbFld.setActionCommand(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbFld.actionCommand")); // NOI18N

        txtFld.setText(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.txtFld.text")); // NOI18N

        buttonGroup1.add(rbValue);
        rbValue.setSelected(true);
        rbValue.setText(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbValue.text")); // NOI18N
        rbValue.setActionCommand(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.rbValue.actionCommand")); // NOI18N

        txtValue.setText(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.txtValue.text")); // NOI18N

        btnOk.setMnemonic(KeyEvent.VK_O);
        btnOk.setText(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.btnOk.text")); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setMnemonic(KeyEvent.VK_C);
        btnCancel.setText(org.openide.util.NbBundle.getMessage(DefaultValueForm.class, "DefaultValueForm.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbFld)
                                    .addComponent(rbValue))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtValue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFld, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(rbUser)
                                .addComponent(rbToday)
                                .addComponent(rbTime, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnOk});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(rbToday)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbTime)
                .addGap(7, 7, 7)
                .addComponent(rbUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbFld)
                    .addComponent(txtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbValue)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (value.equals(VAL_CUSTOM)) {
            this.editor.setAsText(txtValue.getText());
        } else if (value.equals(VAL_FIELD)) {
            if ("".equals(txtFld.getText())) {
                JOptionPane.showMessageDialog(this, "Please enter the field name.");
                txtFld.requestFocus();
                return;
            } else
                this.editor.setAsText(VAL_FIELD + "(" + txtFld.getText() + ")");
        } else {
            this.editor.setAsText(value);
        }
        doClose(RET_OK);
    }//GEN-LAST:event_btnOkActionPerformed

    /**
     *
     * @param retStatus
     */
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    private void initButtons() {
        rbToday.setActionCommand(VAL_TODAY);
        rbTime.setActionCommand(VAL_TIMESTAMP);
        rbUser.setActionCommand(VAL_USER);
        rbFld.setActionCommand(VAL_FIELD);
        rbValue.setActionCommand(VAL_CUSTOM);
        rbToday.addActionListener(this);
        rbTime.addActionListener(this);
        rbUser.addActionListener(this);
        rbFld.addActionListener(this);
        rbValue.addActionListener(this);
    }


    @Override
    public void actionPerformed(ActionEvent e) {
        value = e.getActionCommand();
        if (value.equals(VAL_CUSTOM)) {
            txtValue.setEnabled(true);
            txtFld.setEnabled(false);
            txtValue.requestFocus();
        } else if (value.equals(VAL_FIELD)) {
            txtFld.setEnabled(true);
            txtValue.setEnabled(false);
            txtFld.requestFocus();
        } else {
            txtValue.setEnabled(false);
            txtFld.setEnabled(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton rbFld;
    private javax.swing.JRadioButton rbTime;
    private javax.swing.JRadioButton rbToday;
    private javax.swing.JRadioButton rbUser;
    private javax.swing.JRadioButton rbValue;
    private javax.swing.JTextField txtFld;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables



}
