/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TabOrdersForm.java
 *
 * Created on Mar 23, 2012, 9:04:57 AM
 */
package com.echoman.designer.components.echocommon;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
import com.echoman.designer.components.echoborder.EchoBorderNodeData;
import com.echoman.designer.components.echodatacontainer.EchoDataContainerNodeData;
import com.echoman.designer.components.echoform.EchoFormNodeData;
import com.echoman.designer.components.echoimage.EchoImageNodeData;
import com.echoman.designer.components.echointerfaces.IEchoComponentNodeData;
import com.echoman.designer.components.echolabel.EchoLabelNodeData;

/**
 *
 */
public class TabOrdersForm extends javax.swing.JDialog {

    public static final int RET_CANCEL = 0;
    public static final int RET_OK = 1;
    private DefaultListModel lstModel = new DefaultListModel();
    private EchoFormNodeData nodeData = null;
    private int returnStatus = RET_CANCEL;
    private HashMap<String, IEchoComponentNodeData> nodeDataMap = new HashMap<String, IEchoComponentNodeData>();

    /**
     * Creates new form TabOrdersForm
     */
    public TabOrdersForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
        this.setLocationRelativeTo(null);
    }

    public TabOrdersForm(java.awt.Frame parent, boolean modal, EchoFormNodeData nodeData) {
        this(parent, modal);
        this.nodeData = nodeData;
        loadListModel();
    }

    private void init() {
        lst.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lst.setModel(lstModel);
    }

    private void loadListModel() {
        nodeDataMap.clear();
        lstModel.removeAllElements();
        if (nodeData.getDesignerPage().getCompList() != null) {
            int pastIdx = -1;
            while (true) {
                int idx = 9999;
                IEchoComponentNodeData curNode = null;
                for (IEchoComponentNodeData d : nodeData.getDesignerPage().getCompList()) {
                    //Ticket #464 
                    if (d.getParentId() != null) {
                        if (nodeData.getActiveForm().getId().equals(d.getParentId())) {
                            if (!((d instanceof EchoLabelNodeData)
                                    || (d instanceof EchoBorderNodeData)
                                    || (d instanceof EchoDataContainerNodeData)
                                    || (d instanceof EchoImageNodeData))) {
                                if (d.getTabOrder() > pastIdx) {
                                    if (d.getTabOrder() < idx) {
                                        curNode = d;
                                        idx = d.getTabOrder();
                                    } else if (d.getTabOrder() == idx) {
                                        nodeDataMap.put(d.getName(), d);
                                        lstModel.insertElementAt(d.getName(), idx);
                                    }
                                }
                            }
                        }
                    }
                }
                if (curNode == null) {
                    break;
                } else {
                    nodeDataMap.put(curNode.getName(), curNode);
                    lstModel.addElement(curNode.getName());
                    pastIdx = idx;
                }
            }
        }
        if (!lstModel.isEmpty()) {
            lst.setSelectedIndex(0);
        }
    }

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnUp = new javax.swing.JButton();
        btnDown = new javax.swing.JButton();

        jCheckBox1.setText(org.openide.util.NbBundle.getMessage(TabOrdersForm.class, "TabOrdersForm.jCheckBox1.text")); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(TabOrdersForm.class, "TabOrdersForm.title")); // NOI18N
        setModal(true);
        setResizable(false);

        lst.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lst);

        btnOk.setText(org.openide.util.NbBundle.getMessage(TabOrdersForm.class, "TabOrdersForm.btnOk.text")); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText(org.openide.util.NbBundle.getMessage(TabOrdersForm.class, "TabOrdersForm.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnUp.setText(org.openide.util.NbBundle.getMessage(TabOrdersForm.class, "TabOrdersForm.btnUp.text")); // NOI18N
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });

        btnDown.setText(org.openide.util.NbBundle.getMessage(TabOrdersForm.class, "TabOrdersForm.btnDown.text")); // NOI18N
        btnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUp)
                                    .addComponent(btnDown)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnOk});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDown, btnUp});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDown)))
                .addGap(8, 8, 8)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        applyChanges();
        doClose(RET_OK);
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void applyChanges() {
        for (int i = 0; i < lstModel.getSize(); i++) {
            String nodeName = lstModel.get(i).toString();
            IEchoComponentNodeData d = nodeDataMap.get(nodeName);
            d.setTabOrder(i);
        }
    }

    private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
        int idx = lst.getSelectedIndex();
        if ((idx > -1) && (idx < lstModel.size())) {
            int nextIdx = idx + 1;
            if ((nextIdx > -1) && (nextIdx < lstModel.size())) {
                Object o = lstModel.getElementAt(idx);
                Object nexto = lstModel.getElementAt(nextIdx);
                lstModel.setElementAt(o, nextIdx);
                lstModel.setElementAt(nexto, idx);
                lst.setSelectedIndex(nextIdx);
            }
        }
    }//GEN-LAST:event_btnDownActionPerformed

    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        int idx = lst.getSelectedIndex();
        if (idx > 0) {
            int nextIdx = idx - 1;
            if ((nextIdx > -1) && (nextIdx < lstModel.size())) {
                Object o = lstModel.getElementAt(idx);
                Object nexto = lstModel.getElementAt(nextIdx);
                lstModel.setElementAt(o, nextIdx);
                lstModel.setElementAt(nexto, idx);
                lst.setSelectedIndex(nextIdx);
            }
        }
    }//GEN-LAST:event_btnUpActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDown;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnUp;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList lst;
    // End of variables declaration//GEN-END:variables
}
