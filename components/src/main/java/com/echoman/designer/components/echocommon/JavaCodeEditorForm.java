/**
 *
 */
package com.echoman.designer.components.echocommon;

import com.echoman.designer.components.echointerfaces.IEchoComponentNode;
import java.beans.PropertyEditor;
import java.beans.PropertyEditorSupport;
import java.io.File;
import javax.swing.text.Document;
import javax.swing.text.EditorKit;
import com.echoman.designer.components.echointerfaces.IEchoComponentNodeData;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;
import org.openide.loaders.DataObject;
import org.openide.nodes.Node;
import org.openide.text.CloneableEditorSupport;
import org.openide.util.Exceptions;
import org.netbeans.api.editor.DialogBinding;

/**
 *
 * @author  david.morin
 */
public class JavaCodeEditorForm extends javax.swing.JDialog {

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    public PropertyEditor editor;
    private IEchoComponentNodeData nodedata;
    private File tmpFile = null;

    /**
     * Creates new form TablesColumnsForm
     * @param parent
     * @param modal
     * @param editor
     */
    public JavaCodeEditorForm(java.awt.Frame parent, boolean modal, PropertyEditorSupport editor) {
        super(parent, modal);
        this.editor = editor;
        initComponents();
        setLocationRelativeTo(null);
        Node[] ary = JDesiWindowManager.getActiveDesignerPage().getMgr().getSelectedNodes();
        nodedata = ((IEchoComponentNode) ary[0]).getNodeData();
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    public void initEditorPane() {
        try {
            EditorKit kit = CloneableEditorSupport.getEditorKit("text/x-java");
            javaCodeEditor.setEditorKit(kit);
            tmpFile = File.createTempFile("jdesitemp", ".java");
            if (tmpFile.exists()) {
                FileObject fob = FileUtil.toFileObject(FileUtil.normalizeFile(tmpFile));
                //FileObject fob = FileUtil.createData(tmpFile);
                DataObject dob = DataObject.find(fob);
                javaCodeEditor.getDocument().putProperty(
                Document.StreamDescriptionProperty, dob);
                // This sets up a default class path for us so that
                // we can find all the JDK classes via code completion.
                DialogBinding.bindComponentToFile(fob, 0, 0, javaCodeEditor);
                // Last but not least, we need to fill the editor pane with
                // some initial dummy code - as it seems somehow required to
                // kick-start code completion.
                // A package declaration will do.
                javaCodeEditor.setText("package com.echoman.forms;\r\n\r\n");
            }
        } catch (java.io.IOException ex) {
            Exceptions.printStackTrace(ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        javaCodeEditor = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(JavaCodeEditorForm.class, "JavaCodeEditorForm.title")); // NOI18N
        setAlwaysOnTop(true);
        setLocationByPlatform(true);
        setModal(true);
        setName("javaCodeEditor"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText(org.openide.util.NbBundle.getMessage(JavaCodeEditorForm.class, "JavaCodeEditorForm.okButton.text")); // NOI18N
        okButton.setEnabled(false);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(org.openide.util.NbBundle.getMessage(JavaCodeEditorForm.class, "JavaCodeEditorForm.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javaCodeEditor.setContentType(org.openide.util.NbBundle.getMessage(JavaCodeEditorForm.class, "JavaCodeEditorForm.javaCodeEditor.contentType")); // NOI18N
        javaCodeEditor.setName("javaCodeEditor"); // NOI18N
        jScrollPane1.setViewportView(javaCodeEditor);
        initEditorPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(470, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(JavaCodeEditorForm.class, "JavaCodeEditorForm.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.editor.setAsText("");
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        // Delete the tmp file for the java code editor.
        if ((tmpFile != null) && (tmpFile.exists())) {
            tmpFile.delete();
        }
    }//GEN-LAST:event_formWindowClosed

    /**
     *
     * @param retStatus
     */
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane javaCodeEditor;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
}
