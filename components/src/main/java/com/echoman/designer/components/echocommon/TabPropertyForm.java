/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TabPropertyForm.java
 *
 * Created on Nov 4, 2011, 8:08:54 PM
 */
package com.echoman.designer.components.echocommon;

import java.beans.PropertyEditorSupport;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import com.echoman.designer.components.echoform.EchoFormNodeData;
import com.echoman.designer.components.echointerfaces.IEchoComponentNode;
import org.openide.nodes.Node;

public class TabPropertyForm extends javax.swing.JDialog {

    private DefaultListModel lstModel = new DefaultListModel();
    private List<TabObject> tabObjects = new ArrayList<TabObject>();
    private final PropertyEditorSupport editor;

    public class TabObject {

        public static final int NONE = -1;
        public static final int NEW = 0;
        public static final int EDITED = 1;
        public static final int DELETED = 2;
        private int oldIndex = -1;
        private int newIndex = -1;
        private int status = NONE;
        private String oldCaption = "";
        private String newCaption = "";

        public TabObject(int index, String caption) {
            this.oldIndex = index;
            this.newIndex = index;
            this.oldCaption = caption;
            this.newCaption = caption;
        }

        public TabObject(int index, String caption, int status) {
            this(index, caption);
            this.status = status;
        }

        public String getOldCaption() {
            return oldCaption;
        }

        public String getNewCaption() {
            return newCaption;
        }

        public void setCaption(String caption) {
            this.newCaption = caption;
            if (status == NONE) {
                status = EDITED;
            }
        }

        public int getNewIndex() {
            return newIndex;
        }

        public void setNewIndex(int newIndex) {
            this.newIndex = newIndex;
        }

        public int getOldIndex() {
            return oldIndex;
        }

        public void setOldIndex(int oldIndex) {
            this.oldIndex = oldIndex;
        }

        public int getStatus() {
            return status;
        }

        public void delete() {
            this.status = DELETED;
        }
    }

    /** Creates new form TabPropertyForm */
    public TabPropertyForm(java.awt.Frame parent, boolean modal, PropertyEditorSupport editor) {
        super(parent, modal);
        this.editor = editor;
        initComponents();
        Node[] ary = JDesiWindowManager.getActiveDesignerPage().getMgr().getSelectedNodes();
        EchoFormNodeData nodeData = (EchoFormNodeData) ((IEchoComponentNode) ary[0]).getNodeData();
        chkBottom.setSelected("bottom".equals(nodeData.getTabPosition()));
        setTabs(editor.getAsText());
        setLocationRelativeTo(null);
        btnAdd.requestFocus();
    }

    private void setTabs(String tabs) {
        lst.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lst.setModel(lstModel);
        lstModel.removeAllElements();
        StringTokenizer t = new StringTokenizer(tabs, "\n");
        int idx = -1;
        while (t.hasMoreTokens()) {
            idx++;
            String caption = t.nextToken();
            lstModel.addElement(caption);
            tabObjects.add(new TabObject(idx, caption));
        }
    }

    public boolean doAcceptValue(String tabs, String placement, List<TabObject> tabObjects) {
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lst = new javax.swing.JList();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        chkBottom = new javax.swing.JCheckBox();
        btnUp = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnDwn = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(TabPropertyForm.class, "TabPropertyForm.title")); // NOI18N
        setModal(true);
        setResizable(false);

        lst.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lst);

        btnAdd.setText(org.openide.util.NbBundle.getMessage(TabPropertyForm.class, "TabPropertyForm.btnAdd.text")); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText(org.openide.util.NbBundle.getMessage(TabPropertyForm.class, "TabPropertyForm.btnEdit.text")); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnRemove.setText(org.openide.util.NbBundle.getMessage(TabPropertyForm.class, "TabPropertyForm.btnRemove.text")); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        chkBottom.setText(org.openide.util.NbBundle.getMessage(TabPropertyForm.class, "TabPropertyForm.chkBottom.text")); // NOI18N
        chkBottom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBottomActionPerformed(evt);
            }
        });

        btnUp.setText(org.openide.util.NbBundle.getMessage(TabPropertyForm.class, "TabPropertyForm.btnUp.text")); // NOI18N
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });

        btnDwn.setText(org.openide.util.NbBundle.getMessage(TabPropertyForm.class, "TabPropertyForm.btnDwn.text")); // NOI18N
        btnDwn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDwnActionPerformed(evt);
            }
        });

        btnOk.setText(org.openide.util.NbBundle.getMessage(TabPropertyForm.class, "TabPropertyForm.btnOk.text")); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText(org.openide.util.NbBundle.getMessage(TabPropertyForm.class, "TabPropertyForm.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEdit)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                            .addComponent(btnRemove)
                            .addComponent(btnUp)
                            .addComponent(btnDwn)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(chkBottom)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnOk});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnEdit, btnRemove});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDwn, btnUp});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemove)
                        .addGap(18, 18, 18)
                        .addComponent(chkBottom)
                        .addGap(33, 33, 33)
                        .addComponent(btnUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDwn)
                        .addGap(19, 19, 19)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOk)
                            .addComponent(btnCancel))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        String tabs = "";
        for (int i = 0; i < lstModel.getSize(); i++) {
            String tab = lstModel.getElementAt(i).toString();
            if (!"".equals(tabs)) {
                tabs = tabs + "\n";
            }
            tabs = tabs + tab;
            //sync the new index for the tab
            TabObject to = findTabObject(tab);
            to.setNewIndex(i);
        }

        String place = "top";
        if (chkBottom.isSelected()) {
            place = "bottom";
        }

        if (doAcceptValue(tabs, place, tabObjects)) {
            setVisible(false);
            dispose();
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private TabObject findTabObject(String caption) {
        for (TabObject to : tabObjects) {
            if (to.getNewCaption().equalsIgnoreCase(caption)) {
                return to;
            }
        }
        return null;
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String tab = JOptionPane.showInputDialog(this, "Enter tab caption:");
        if ((tab != null) && (!"".equals(tab))) {
            boolean tabFound = false;
            for (int i = 0; i < lstModel.getSize(); i++) {
                if (lstModel.getElementAt(i).toString().equalsIgnoreCase(tab)) {
                    tabFound = true;
                    break;
                }
            }
            if (tabFound) {
                JOptionPane.showMessageDialog(this, "Tab [" + tab + "] already exists.");
            } else {
                lstModel.addElement(tab);
                tabObjects.add(new TabObject(lstModel.getSize() - 1, tab,
                        TabObject.NEW));
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int idx = lst.getSelectedIndex();
        if (idx > -1) {
            String tab = JOptionPane.showInputDialog(this, "Enter tab caption:");
            if ((tab != null) && (!"".equals(tab))) {
                boolean tabFound = false;
                for (int i = 0; i < lstModel.getSize(); i++) {
                    if (lstModel.getElementAt(i).toString().equalsIgnoreCase(tab)) {
                        tabFound = true;
                        break;
                    }
                }
                if (tabFound) {
                    JOptionPane.showMessageDialog(this, "Tab [" + tab + "] already exists.");
                } else {
                    TabObject to = findTabObject(lstModel.getElementAt(idx).toString());
                    to.setCaption(tab);
                    lstModel.set(idx, tab);
                }
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int idx = lst.getSelectedIndex();
        if (idx > -1) {
            TabObject to = findTabObject(lstModel.getElementAt(idx).toString());
            //if tab is just added remove from the list
            if (to.getStatus() == TabObject.NEW) {
                tabObjects.remove(to);
            } else {
                to.delete();
            }
            lstModel.removeElementAt(idx);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void moveTab(int idx, int nextIdx) {
        if ((nextIdx > -1) && (nextIdx < lstModel.size())) {
            Object o = lstModel.getElementAt(idx);
            Object nexto = lstModel.getElementAt(nextIdx);
            lstModel.setElementAt(o, nextIdx);
            lstModel.setElementAt(nexto, idx);
            lst.setSelectedIndex(nextIdx);
        }
    }

    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        int idx = lst.getSelectedIndex();
        if (idx > 0) {
            moveTab(idx, idx - 1);
        }
    }//GEN-LAST:event_btnUpActionPerformed

    private void btnDwnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDwnActionPerformed
        int idx = lst.getSelectedIndex();
        if ((idx > -1) && (idx < lstModel.size())) {
            moveTab(idx, idx + 1);
        }
    }//GEN-LAST:event_btnDwnActionPerformed

    private void chkBottomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBottomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBottomActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDwn;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUp;
    private javax.swing.JCheckBox chkBottom;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList lst;
    // End of variables declaration//GEN-END:variables
}
